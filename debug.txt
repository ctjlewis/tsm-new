yarn run v1.22.17
$ ava







[resolve]

Resolving specifier: {
  importedFromURL: undefined,
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}
[resolve]

Resolving specifier: {
  importedFromURL: undefined,
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: undefined,
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:worker_threads'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:worker_threads' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'currently-unhandled'
}


[resolve]

Using defaultResolve for named module: { specifier: 'currently-unhandled' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../chalk.js'
}


[resolve]

Finding import URL for {
  specifier: '../chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../provider-manager.js'
}


[resolve]

Finding import URL for {
  specifier: '../provider-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../runner.js'
}


[resolve]

Finding import URL for {
  specifier: '../runner.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: '../serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './dependency-tracker.js'
}


[resolve]

Finding import URL for {
  specifier: './dependency-tracker.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './line-numbers.js'
}


[resolve]

Finding import URL for {
  specifier: './line-numbers.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './options.cjs'
}


[resolve]

Finding import URL for {
  specifier: './options.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './utils.cjs'
}


[resolve]

Finding import URL for {
  specifier: './utils.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils'
}


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:worker_threads' }


[getFormat]

No loader found, using default format: { url: 'node:worker_threads' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:worker_threads'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:worker_threads' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'currently-unhandled'
}


[resolve]

Using defaultResolve for named module: { specifier: 'currently-unhandled' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../chalk.js'
}


[resolve]

Finding import URL for {
  specifier: '../chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../provider-manager.js'
}


[resolve]

Finding import URL for {
  specifier: '../provider-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../runner.js'
}


[resolve]

Finding import URL for {
  specifier: '../runner.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: '../serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './dependency-tracker.js'
}


[resolve]

Finding import URL for {
  specifier: './dependency-tracker.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './line-numbers.js'
}


[resolve]

Finding import URL for {
  specifier: './line-numbers.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './options.cjs'
}


[resolve]

Finding import URL for {
  specifier: './options.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './utils.cjs'
}


[resolve]

Finding import URL for {
  specifier: './utils.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils'
}


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:worker_threads' }


[getFormat]

No loader found, using default format: { url: 'node:worker_threads' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}




[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:worker_threads'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:worker_threads' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'currently-unhandled'
}


[resolve]

Using defaultResolve for named module: { specifier: 'currently-unhandled' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../chalk.js'
}


[resolve]

Finding import URL for {
  specifier: '../chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../provider-manager.js'
}


[resolve]

Finding import URL for {
  specifier: '../provider-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../runner.js'
}


[resolve]

Finding import URL for {
  specifier: '../runner.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: '../serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './dependency-tracker.js'
}


[resolve]

Finding import URL for {
  specifier: './dependency-tracker.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './line-numbers.js'
}


[resolve]

Finding import URL for {
  specifier: './line-numbers.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './options.cjs'
}


[resolve]

Finding import URL for {
  specifier: './options.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './utils.cjs'
}


[resolve]

Finding import URL for {
  specifier: './utils.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils'
}


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:worker_threads' }


[getFormat]

No loader found, using default format: { url: 'node:worker_threads' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './globs.js'
}


[resolve]

Finding import URL for {
  specifier: './globs.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './pkg.cjs'
}


[resolve]

Finding import URL for {
  specifier: './pkg.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'emittery'
}


[resolve]

Using defaultResolve for named module: { specifier: 'emittery' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'matcher'
}


[resolve]

Using defaultResolve for named module: { specifier: 'matcher' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './context-ref.js'
}


[resolve]

Finding import URL for {
  specifier: './context-ref.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './create-chain.js'
}


[resolve]

Finding import URL for {
  specifier: './create-chain.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: './serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './test.js'
}


[resolve]

Finding import URL for {
  specifier: './test.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './worker/state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './worker/state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'clean-yaml-object'
}


[resolve]

Using defaultResolve for named module: { specifier: 'clean-yaml-object' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'stack-utils'
}


[resolve]

Using defaultResolve for named module: { specifier: 'stack-utils' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'callsites'
}


[resolve]

Using defaultResolve for named module: { specifier: 'callsites' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: '#ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#supports-color'
}


[resolve]

Using defaultResolve for named module: { specifier: '#supports-color' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: './utilities.js'
}


[resolve]

Finding import URL for {
  specifier: './utilities.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'globby'
}


[resolve]

Using defaultResolve for named module: { specifier: 'globby' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: './glob-helpers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './glob-helpers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
  specifier: 'escape-string-regexp'
}


[resolve]

Using defaultResolve for named module: { specifier: 'escape-string-regexp' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:buffer'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:buffer' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:crypto'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:crypto' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:zlib'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:zlib' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'cbor'
}


[resolve]

Using defaultResolve for named module: { specifier: 'cbor' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'indent-string'
}


[resolve]

Using defaultResolve for named module: { specifier: 'indent-string' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'mem'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mem' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'write-file-atomic'
}


[resolve]

Using defaultResolve for named module: { specifier: 'write-file-atomic' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:buffer' }


[getFormat]

No loader found, using default format: { url: 'node:buffer' }


[getFormat]

Getting format for source file: { url: 'node:crypto' }


[getFormat]

No loader found, using default format: { url: 'node:crypto' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:zlib' }


[getFormat]

No loader found, using default format: { url: 'node:zlib' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'plur'
}


[resolve]

Using defaultResolve for named module: { specifier: 'plur' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './like-selector.js'
}


[resolve]

Finding import URL for {
  specifier: './like-selector.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'node:util'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:util' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'strip-ansi'
}


[resolve]

Using defaultResolve for named module: { specifier: 'strip-ansi' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: './chalk.js'
}


[resolve]

Finding import URL for {
  specifier: './chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[getFormat]

Getting format for source file: { url: 'node:util' }


[getFormat]

No loader found, using default format: { url: 'node:util' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:os'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:os' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:tty'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:tty' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:os' }


[getFormat]

No loader found, using default format: { url: 'node:os' }


[getFormat]

Getting format for source file: { url: 'node:tty' }


[getFormat]

No loader found, using default format: { url: 'node:tty' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'array-union'
}


[resolve]

Using defaultResolve for named module: { specifier: 'array-union' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'merge2'
}


[resolve]

Using defaultResolve for named module: { specifier: 'merge2' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'dir-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'dir-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './gitignore.js'
}


[resolve]

Finding import URL for {
  specifier: './gitignore.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './stream-utils.js'
}


[resolve]

Finding import URL for {
  specifier: './stream-utils.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'mimic-fn'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mimic-fn' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'map-age-cleaner'
}


[resolve]

Using defaultResolve for named module: { specifier: 'map-age-cleaner' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
  specifier: 'irregular-plurals'
}


[resolve]

Using defaultResolve for named module: { specifier: 'irregular-plurals' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
  specifier: 'ansi-regex'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-regex' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'ignore'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ignore' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  specifier: 'node:stream'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:stream' }


[getFormat]

Getting format for source file: { url: 'node:stream' }


[getFormat]

No loader found, using default format: { url: 'node:stream' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './globs.js'
}


[resolve]

Finding import URL for {
  specifier: './globs.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './pkg.cjs'
}


[resolve]

Finding import URL for {
  specifier: './pkg.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'emittery'
}


[resolve]

Using defaultResolve for named module: { specifier: 'emittery' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'matcher'
}


[resolve]

Using defaultResolve for named module: { specifier: 'matcher' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './context-ref.js'
}


[resolve]

Finding import URL for {
  specifier: './context-ref.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './create-chain.js'
}


[resolve]

Finding import URL for {
  specifier: './create-chain.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: './serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './test.js'
}


[resolve]

Finding import URL for {
  specifier: './test.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './worker/state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './worker/state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'clean-yaml-object'
}


[resolve]

Using defaultResolve for named module: { specifier: 'clean-yaml-object' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'stack-utils'
}


[resolve]

Using defaultResolve for named module: { specifier: 'stack-utils' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'callsites'
}


[resolve]

Using defaultResolve for named module: { specifier: 'callsites' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}
[resolve]

Resolving specifier: {
  importedFromURL: undefined,
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:worker_threads'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:worker_threads' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'currently-unhandled'
}


[resolve]

Using defaultResolve for named module: { specifier: 'currently-unhandled' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../chalk.js'
}


[resolve]

Finding import URL for {
  specifier: '../chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../provider-manager.js'
}


[resolve]

Finding import URL for {
  specifier: '../provider-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../runner.js'
}


[resolve]

Finding import URL for {
  specifier: '../runner.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: '../serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './dependency-tracker.js'
}


[resolve]

Finding import URL for {
  specifier: './dependency-tracker.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './line-numbers.js'
}


[resolve]

Finding import URL for {
  specifier: './line-numbers.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './options.cjs'
}


[resolve]

Finding import URL for {
  specifier: './options.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './utils.cjs'
}


[resolve]

Finding import URL for {
  specifier: './utils.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils'
}


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:worker_threads' }


[getFormat]

No loader found, using default format: { url: 'node:worker_threads' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}
[resolve]

Resolving specifier: {
  importedFromURL: undefined,
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'node:worker_threads'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:worker_threads' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'currently-unhandled'
}


[resolve]

Using defaultResolve for named module: { specifier: 'currently-unhandled' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../chalk.js'
}


[resolve]

Finding import URL for {
  specifier: '../chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../provider-manager.js'
}


[resolve]

Finding import URL for {
  specifier: '../provider-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../runner.js'
}


[resolve]

Finding import URL for {
  specifier: '../runner.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: '../serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: '../serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './dependency-tracker.js'
}


[resolve]

Finding import URL for {
  specifier: './dependency-tracker.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './line-numbers.js'
}


[resolve]

Finding import URL for {
  specifier: './line-numbers.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './options.cjs'
}


[resolve]

Finding import URL for {
  specifier: './options.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: './utils.cjs'
}


[resolve]

Finding import URL for {
  specifier: './utils.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils'
}


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:worker_threads' }


[getFormat]

No loader found, using default format: { url: 'node:worker_threads' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/currently-unhandled/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/options.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/utils.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './globs.js'
}


[resolve]

Finding import URL for {
  specifier: './globs.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './pkg.cjs'
}


[resolve]

Finding import URL for {
  specifier: './pkg.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'emittery'
}


[resolve]

Using defaultResolve for named module: { specifier: 'emittery' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'matcher'
}


[resolve]

Using defaultResolve for named module: { specifier: 'matcher' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './context-ref.js'
}


[resolve]

Finding import URL for {
  specifier: './context-ref.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './create-chain.js'
}


[resolve]

Finding import URL for {
  specifier: './create-chain.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: './serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './test.js'
}


[resolve]

Finding import URL for {
  specifier: './test.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './worker/state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './worker/state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'clean-yaml-object'
}


[resolve]

Using defaultResolve for named module: { specifier: 'clean-yaml-object' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'stack-utils'
}


[resolve]

Using defaultResolve for named module: { specifier: 'stack-utils' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'callsites'
}


[resolve]

Using defaultResolve for named module: { specifier: 'callsites' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: '#ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#supports-color'
}


[resolve]

Using defaultResolve for named module: { specifier: '#supports-color' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: './utilities.js'
}


[resolve]

Finding import URL for {
  specifier: './utilities.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'globby'
}


[resolve]

Using defaultResolve for named module: { specifier: 'globby' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: './glob-helpers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './glob-helpers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
  specifier: 'escape-string-regexp'
}


[resolve]

Using defaultResolve for named module: { specifier: 'escape-string-regexp' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:buffer'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:buffer' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:crypto'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:crypto' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:zlib'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:zlib' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'cbor'
}


[resolve]

Using defaultResolve for named module: { specifier: 'cbor' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'indent-string'
}


[resolve]

Using defaultResolve for named module: { specifier: 'indent-string' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'mem'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mem' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'write-file-atomic'
}


[resolve]

Using defaultResolve for named module: { specifier: 'write-file-atomic' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:buffer' }


[getFormat]

No loader found, using default format: { url: 'node:buffer' }


[getFormat]

Getting format for source file: { url: 'node:crypto' }


[getFormat]

No loader found, using default format: { url: 'node:crypto' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:zlib' }


[getFormat]

No loader found, using default format: { url: 'node:zlib' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'plur'
}


[resolve]

Using defaultResolve for named module: { specifier: 'plur' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './like-selector.js'
}


[resolve]

Finding import URL for {
  specifier: './like-selector.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'node:util'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:util' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'strip-ansi'
}


[resolve]

Using defaultResolve for named module: { specifier: 'strip-ansi' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: './chalk.js'
}


[resolve]

Finding import URL for {
  specifier: './chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[getFormat]

Getting format for source file: { url: 'node:util' }


[getFormat]

No loader found, using default format: { url: 'node:util' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: '#ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#supports-color'
}


[resolve]

Using defaultResolve for named module: { specifier: '#supports-color' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: './utilities.js'
}


[resolve]

Finding import URL for {
  specifier: './utilities.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'globby'
}


[resolve]

Using defaultResolve for named module: { specifier: 'globby' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: './glob-helpers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './glob-helpers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
  specifier: 'escape-string-regexp'
}


[resolve]

Using defaultResolve for named module: { specifier: 'escape-string-regexp' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:buffer'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:buffer' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:crypto'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:crypto' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:zlib'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:zlib' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'cbor'
}


[resolve]

Using defaultResolve for named module: { specifier: 'cbor' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'indent-string'
}


[resolve]

Using defaultResolve for named module: { specifier: 'indent-string' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'mem'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mem' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'write-file-atomic'
}


[resolve]

Using defaultResolve for named module: { specifier: 'write-file-atomic' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:buffer' }


[getFormat]

No loader found, using default format: { url: 'node:buffer' }


[getFormat]

Getting format for source file: { url: 'node:crypto' }


[getFormat]

No loader found, using default format: { url: 'node:crypto' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:zlib' }


[getFormat]

No loader found, using default format: { url: 'node:zlib' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'plur'
}


[resolve]

Using defaultResolve for named module: { specifier: 'plur' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './like-selector.js'
}


[resolve]

Finding import URL for {
  specifier: './like-selector.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'node:util'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:util' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'strip-ansi'
}


[resolve]

Using defaultResolve for named module: { specifier: 'strip-ansi' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: './chalk.js'
}


[resolve]

Finding import URL for {
  specifier: './chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[getFormat]

Getting format for source file: { url: 'node:util' }


[getFormat]

No loader found, using default format: { url: 'node:util' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:os'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:os' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:tty'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:tty' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:os' }


[getFormat]

No loader found, using default format: { url: 'node:os' }


[getFormat]

Getting format for source file: { url: 'node:tty' }


[getFormat]

No loader found, using default format: { url: 'node:tty' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'array-union'
}


[resolve]

Using defaultResolve for named module: { specifier: 'array-union' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'merge2'
}


[resolve]

Using defaultResolve for named module: { specifier: 'merge2' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'dir-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'dir-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './gitignore.js'
}


[resolve]

Finding import URL for {
  specifier: './gitignore.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './stream-utils.js'
}


[resolve]

Finding import URL for {
  specifier: './stream-utils.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'mimic-fn'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mimic-fn' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'map-age-cleaner'
}


[resolve]

Using defaultResolve for named module: { specifier: 'map-age-cleaner' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
  specifier: 'irregular-plurals'
}


[resolve]

Using defaultResolve for named module: { specifier: 'irregular-plurals' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
  specifier: 'ansi-regex'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-regex' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'ignore'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ignore' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  specifier: 'node:stream'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:stream' }


[getFormat]

Getting format for source file: { url: 'node:stream' }


[getFormat]

No loader found, using default format: { url: 'node:stream' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
  specifier: 'p-timeout'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-timeout' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: 'assert'
}


[resolve]

Using defaultResolve for named module: { specifier: 'assert' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: 'ava'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ava' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: './fixtures/App1'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/App1',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '' }


[resolve]

Resolving incomplete URL import to file: { specifier: './fixtures/App1' }


[resolve]

Resolved import URL to file: {
  resolvedFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: './fixtures/utils.mts'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/utils.mts',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.mts' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: './fixtures/utils.cts'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/utils.cts',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.cts',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.cts' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: './fixtures/math.ts'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/math.ts',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.ts' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: './fixtures/App2.tsx'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/App2.tsx',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.tsx' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: './fixtures/module/index.js'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/module/index.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index'
}


[resolve]

Found JS import in TS: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index',
  resolvedTsSourceFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: './fixtures/module/index.mjs'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/module/index.mjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.mjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.mjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index'
}


[resolve]

Found JS import in TS: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index',
  resolvedTsSourceFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts',
  specifier: './fixtures/data.json'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/data.json',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/mjs.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.json' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data'
}


[getFormat]

Getting format for source file: { url: 'node:assert' }


[getFormat]

No loader found, using default format: { url: 'node:assert' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.cts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
  specifier: '../lib/worker/main.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../lib/worker/main.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Rewriting file extension: { parentExtension: '.mjs', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.cts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json',
    format: 'module'
  }
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx',
  specifier: './mock'
}


[resolve]

Finding import URL for {
  specifier: './mock',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx'
}


[resolve]

Rewriting file extension: { parentExtension: '.jsx', specifierExtension: '' }


[resolve]

Resolving incomplete URL import to file: { specifier: './mock' }


[resolve]

Resolved import URL to file: {
  resolvedFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx',
  specifier: './mock'
}


[resolve]

Finding import URL for {
  specifier: './mock',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx'
}


[resolve]

Rewriting file extension: { parentExtension: '.tsx', specifierExtension: '' }


[resolve]

Resolving incomplete URL import to file: { specifier: './mock' }


[resolve]

Resolved import URL to file: {
  resolvedFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}
● [DEBUG] This "import" expression will not be bundled because the argument is not a string literal

    file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts:16:25:
      16 │     async (url) => await import(url),
         ╵                          ~~~~~~



[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './globs.js'
}


[resolve]

Finding import URL for {
  specifier: './globs.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './pkg.cjs'
}


[resolve]

Finding import URL for {
  specifier: './pkg.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'emittery'
}


[resolve]

Using defaultResolve for named module: { specifier: 'emittery' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'matcher'
}


[resolve]

Using defaultResolve for named module: { specifier: 'matcher' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './context-ref.js'
}


[resolve]

Finding import URL for {
  specifier: './context-ref.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './create-chain.js'
}


[resolve]

Finding import URL for {
  specifier: './create-chain.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: './serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './test.js'
}


[resolve]

Finding import URL for {
  specifier: './test.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './worker/state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './worker/state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'clean-yaml-object'
}


[resolve]

Using defaultResolve for named module: { specifier: 'clean-yaml-object' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'stack-utils'
}


[resolve]

Using defaultResolve for named module: { specifier: 'stack-utils' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'callsites'
}


[resolve]

Using defaultResolve for named module: { specifier: 'callsites' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: '#ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#supports-color'
}


[resolve]

Using defaultResolve for named module: { specifier: '#supports-color' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: './utilities.js'
}


[resolve]

Finding import URL for {
  specifier: './utilities.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'globby'
}


[resolve]

Using defaultResolve for named module: { specifier: 'globby' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: './glob-helpers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './glob-helpers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
  specifier: 'escape-string-regexp'
}


[resolve]

Using defaultResolve for named module: { specifier: 'escape-string-regexp' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:buffer'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:buffer' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:crypto'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:crypto' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:zlib'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:zlib' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'cbor'
}


[resolve]

Using defaultResolve for named module: { specifier: 'cbor' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'indent-string'
}


[resolve]

Using defaultResolve for named module: { specifier: 'indent-string' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'mem'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mem' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'write-file-atomic'
}


[resolve]

Using defaultResolve for named module: { specifier: 'write-file-atomic' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:buffer' }


[getFormat]

No loader found, using default format: { url: 'node:buffer' }


[getFormat]

Getting format for source file: { url: 'node:crypto' }


[getFormat]

No loader found, using default format: { url: 'node:crypto' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:zlib' }


[getFormat]

No loader found, using default format: { url: 'node:zlib' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'plur'
}


[resolve]

Using defaultResolve for named module: { specifier: 'plur' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './like-selector.js'
}


[resolve]

Finding import URL for {
  specifier: './like-selector.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'node:util'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:util' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'strip-ansi'
}


[resolve]

Using defaultResolve for named module: { specifier: 'strip-ansi' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: './chalk.js'
}


[resolve]

Finding import URL for {
  specifier: './chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[getFormat]

Getting format for source file: { url: 'node:util' }


[getFormat]

No loader found, using default format: { url: 'node:util' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:os'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:os' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:tty'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:tty' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:os' }


[getFormat]

No loader found, using default format: { url: 'node:os' }


[getFormat]

Getting format for source file: { url: 'node:tty' }


[getFormat]

No loader found, using default format: { url: 'node:tty' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'array-union'
}


[resolve]

Using defaultResolve for named module: { specifier: 'array-union' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'merge2'
}


[resolve]

Using defaultResolve for named module: { specifier: 'merge2' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'dir-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'dir-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './gitignore.js'
}


[resolve]

Finding import URL for {
  specifier: './gitignore.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './stream-utils.js'
}


[resolve]

Finding import URL for {
  specifier: './stream-utils.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'mimic-fn'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mimic-fn' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'map-age-cleaner'
}


[resolve]

Using defaultResolve for named module: { specifier: 'map-age-cleaner' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
  specifier: 'irregular-plurals'
}


[resolve]

Using defaultResolve for named module: { specifier: 'irregular-plurals' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
  specifier: 'ansi-regex'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-regex' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'ignore'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ignore' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  specifier: 'node:stream'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:stream' }


[getFormat]

Getting format for source file: { url: 'node:stream' }


[getFormat]

No loader found, using default format: { url: 'node:stream' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
  specifier: 'p-timeout'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-timeout' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './globs.js'
}


[resolve]

Finding import URL for {
  specifier: './globs.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js',
  specifier: './pkg.cjs'
}


[resolve]

Finding import URL for {
  specifier: './pkg.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/provider-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/pkg.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'emittery'
}


[resolve]

Using defaultResolve for named module: { specifier: 'emittery' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: 'matcher'
}


[resolve]

Using defaultResolve for named module: { specifier: 'matcher' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './context-ref.js'
}


[resolve]

Finding import URL for {
  specifier: './context-ref.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './create-chain.js'
}


[resolve]

Finding import URL for {
  specifier: './create-chain.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './serialize-error.js'
}


[resolve]

Finding import URL for {
  specifier: './serialize-error.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './test.js'
}


[resolve]

Finding import URL for {
  specifier: './test.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js',
  specifier: './worker/state.cjs'
}


[resolve]

Finding import URL for {
  specifier: './worker/state.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/runner.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/emittery/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/state.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'clean-yaml-object'
}


[resolve]

Using defaultResolve for named module: { specifier: 'clean-yaml-object' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: 'stack-utils'
}


[resolve]

Using defaultResolve for named module: { specifier: 'stack-utils' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/serialize-error.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/clean-yaml-object/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/stack-utils/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js',
  specifier: './channel.cjs'
}


[resolve]

Finding import URL for {
  specifier: './channel.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/dependency-tracker.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/line-numbers.js',
  specifier: 'callsites'
}


[resolve]

Using defaultResolve for named module: { specifier: 'callsites' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: '#ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: '#supports-color'
}


[resolve]

Using defaultResolve for named module: { specifier: '#supports-color' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js',
  specifier: './utilities.js'
}


[resolve]

Finding import URL for {
  specifier: './utilities.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: 'globby'
}


[resolve]

Using defaultResolve for named module: { specifier: 'globby' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js',
  specifier: './glob-helpers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './glob-helpers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/globs.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/glob-helpers.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/matcher/index.js',
  specifier: 'escape-string-regexp'
}


[resolve]

Using defaultResolve for named module: { specifier: 'escape-string-regexp' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/context-ref.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/create-chain.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:buffer'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:buffer' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:crypto'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:crypto' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:module'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:module' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'node:zlib'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:zlib' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'cbor'
}


[resolve]

Using defaultResolve for named module: { specifier: 'cbor' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'indent-string'
}


[resolve]

Using defaultResolve for named module: { specifier: 'indent-string' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'mem'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mem' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: 'write-file-atomic'
}


[resolve]

Using defaultResolve for named module: { specifier: 'write-file-atomic' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[getFormat]

Getting format for source file: { url: 'node:buffer' }


[getFormat]

No loader found, using default format: { url: 'node:buffer' }


[getFormat]

Getting format for source file: { url: 'node:crypto' }


[getFormat]

No loader found, using default format: { url: 'node:crypto' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:module' }


[getFormat]

No loader found, using default format: { url: 'node:module' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:zlib' }


[getFormat]

No loader found, using default format: { url: 'node:zlib' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cbor/lib/cbor.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/write-file-atomic/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: 'plur'
}


[resolve]

Using defaultResolve for named module: { specifier: 'plur' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './assert.js'
}


[resolve]

Finding import URL for {
  specifier: './assert.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './now-and-timers.cjs'
}


[resolve]

Finding import URL for {
  specifier: './now-and-timers.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js',
  specifier: './parse-test-args.js'
}


[resolve]

Finding import URL for {
  specifier: './parse-test-args.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/test.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/now-and-timers.cjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/parse-test-args.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'concordance'
}


[resolve]

Using defaultResolve for named module: { specifier: 'concordance' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-error'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-error' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: 'is-promise'
}


[resolve]

Using defaultResolve for named module: { specifier: 'is-promise' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './concordance-options.js'
}


[resolve]

Finding import URL for {
  specifier: './concordance-options.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './like-selector.js'
}


[resolve]

Finding import URL for {
  specifier: './like-selector.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js',
  specifier: './snapshot-manager.js'
}


[resolve]

Finding import URL for {
  specifier: './snapshot-manager.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/assert.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/concordance/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-error/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/snapshot-manager.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'node:util'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:util' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'ansi-styles'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-styles' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: 'strip-ansi'
}


[resolve]

Using defaultResolve for named module: { specifier: 'strip-ansi' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js',
  specifier: './chalk.js'
}


[resolve]

Finding import URL for {
  specifier: './chalk.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/concordance-options.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk'
}


[getFormat]

Getting format for source file: { url: 'node:util' }


[getFormat]

No loader found, using default format: { url: 'node:util' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/chalk.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/callsites/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:os'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:os' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:tty'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:tty' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:os' }


[getFormat]

No loader found, using default format: { url: 'node:os' }


[getFormat]

Getting format for source file: { url: 'node:tty' }


[getFormat]

No loader found, using default format: { url: 'node:tty' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'array-union'
}


[resolve]

Using defaultResolve for named module: { specifier: 'array-union' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'merge2'
}


[resolve]

Using defaultResolve for named module: { specifier: 'merge2' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'dir-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'dir-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './gitignore.js'
}


[resolve]

Finding import URL for {
  specifier: './gitignore.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './stream-utils.js'
}


[resolve]

Finding import URL for {
  specifier: './stream-utils.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'mimic-fn'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mimic-fn' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'map-age-cleaner'
}


[resolve]

Using defaultResolve for named module: { specifier: 'map-age-cleaner' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
  specifier: 'irregular-plurals'
}


[resolve]

Using defaultResolve for named module: { specifier: 'irregular-plurals' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
  specifier: 'ansi-regex'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-regex' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'ignore'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ignore' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  specifier: 'node:stream'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:stream' }


[getFormat]

Getting format for source file: { url: 'node:stream' }


[getFormat]

No loader found, using default format: { url: 'node:stream' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/integration/resolve.test.ts'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/integration/resolve.test.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/integration/resolve.test.ts'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
  specifier: 'p-timeout'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-timeout' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/integration/resolve.test.ts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/integration/resolve.test.ts',
  specifier: '@ctjlewis/await-shell'
}


[resolve]

Using defaultResolve for named module: { specifier: '@ctjlewis/await-shell' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/integration/resolve.test.ts',
  specifier: 'ava'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ava' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/@ctjlewis/await-shell/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/@ctjlewis/await-shell/dist/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:os'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:os' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/vendor/supports-color/index.js',
  specifier: 'node:tty'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:tty' }


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:os' }


[getFormat]

No loader found, using default format: { url: 'node:os' }


[getFormat]

Getting format for source file: { url: 'node:tty' }


[getFormat]

No loader found, using default format: { url: 'node:tty' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/utilities.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'array-union'
}


[resolve]

Using defaultResolve for named module: { specifier: 'array-union' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'merge2'
}


[resolve]

Using defaultResolve for named module: { specifier: 'merge2' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: 'dir-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'dir-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './gitignore.js'
}


[resolve]

Finding import URL for {
  specifier: './gitignore.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js',
  specifier: './stream-utils.js'
}


[resolve]

Finding import URL for {
  specifier: './stream-utils.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/index.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/merge2/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/dir-glob/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/escape-string-regexp/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/indent-string/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'mimic-fn'
}


[resolve]

Using defaultResolve for named module: { specifier: 'mimic-fn' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/mem/dist/index.js',
  specifier: 'map-age-cleaner'
}


[resolve]

Using defaultResolve for named module: { specifier: 'map-age-cleaner' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/map-age-cleaner/dist/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/is-promise/index.mjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/plur/index.js',
  specifier: 'irregular-plurals'
}


[resolve]

Using defaultResolve for named module: { specifier: 'irregular-plurals' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/irregular-plurals/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/like-selector.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-styles/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/strip-ansi/index.js',
  specifier: 'ansi-regex'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ansi-regex' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/array-union/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  specifier: 'node:url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:process'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:process' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'node:path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'fast-glob'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fast-glob' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'ignore'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ignore' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: 'slash'
}


[resolve]

Using defaultResolve for named module: { specifier: 'slash' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js',
  specifier: './to-path.js'
}


[resolve]

Finding import URL for {
  specifier: './to-path.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/gitignore.js'
}


[resolve]

Rewriting file extension: { parentExtension: '.js', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path'
}


[getFormat]

Getting format for source file: { url: 'node:process' }


[getFormat]

No loader found, using default format: { url: 'node:process' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/fast-glob/out/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ignore/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/to-path.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/stream-utils.js',
  specifier: 'node:stream'
}


[resolve]

Using defaultResolve for named module: { specifier: 'node:stream' }


[getFormat]

Getting format for source file: { url: 'node:stream' }


[getFormat]

No loader found, using default format: { url: 'node:stream' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/mimic-fn/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/ansi-regex/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/node_modules/globby/node_modules/slash/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/channel.cjs',
  specifier: 'p-event'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-event' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/base.js',
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Using defaultResolve for named module: {
  specifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
  specifier: 'p-timeout'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-timeout' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: 'assert'
}


[resolve]

Using defaultResolve for named module: { specifier: 'assert' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: 'ava'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ava' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: './fixtures/App1.jsx'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/App1.jsx',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.jsx' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: './fixtures/App2.tsx'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/App2.tsx',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.tsx' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: './fixtures/math.ts'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/math.ts',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.ts' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: './fixtures/utils.mts'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/utils.mts',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.mts' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: './fixtures/utils.cts'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/utils.cts',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.cts',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.cts' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: './fixtures/module/index.js'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/module/index.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index'
}


[resolve]

Found JS import in TS: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index',
  resolvedTsSourceFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: './fixtures/module/index.mjs'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/module/index.mjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.mjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.mjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index'
}


[resolve]

Found JS import in TS: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index',
  resolvedTsSourceFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts',
  specifier: './fixtures/data.json'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/data.json',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/extensions.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.json' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data'
}


[getFormat]

Getting format for source file: { url: 'node:assert' }


[getFormat]

No loader found, using default format: { url: 'node:assert' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.cts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
  specifier: '../lib/worker/main.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../lib/worker/main.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Rewriting file extension: { parentExtension: '.mjs', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.cts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json',
    format: 'module'
  }
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx',
  specifier: './mock'
}


[resolve]

Finding import URL for {
  specifier: './mock',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App1.jsx'
}


[resolve]

Rewriting file extension: { parentExtension: '.jsx', specifierExtension: '' }


[resolve]

Resolving incomplete URL import to file: { specifier: './mock' }


[resolve]

Resolved import URL to file: {
  resolvedFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx',
  specifier: './mock'
}


[resolve]

Finding import URL for {
  specifier: './mock',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/App2.tsx'
}


[resolve]

Rewriting file extension: { parentExtension: '.tsx', specifierExtension: '' }


[resolve]

Resolving incomplete URL import to file: { specifier: './mock' }


[resolve]

Resolved import URL to file: {
  resolvedFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/mock.ts',
    format: 'module'
  }
}
  ✔ legacy › extensions › all extensions and module types should be supported


  ✔ legacy › integration › fixture imports should have expected shape
  ✔ legacy › mjs › ESM imports should have expected shape


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts',
  specifier: 'ava'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ava' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts',
  specifier: 'url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts',
  specifier: '../../src/loader'
}


[resolve]

Finding import URL for {
  specifier: '../../src/loader',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/src/loader',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '' }


[resolve]

Resolving incomplete URL import to file: { specifier: '../../src/loader' }


[resolve]

Resolved import URL to index file: {
  resolvedIndexFile: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/resolve.test.ts',
  specifier: 'path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'path' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts'
}


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
  specifier: '../lib/worker/main.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../lib/worker/main.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Rewriting file extension: { parentExtension: '.mjs', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts',
    format: 'module'
  }
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts',
  specifier: 'path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'path' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts',
  specifier: 'url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts',
  specifier: 'fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts',
  specifier: 'esbuild'
}


[resolve]

Using defaultResolve for named module: { specifier: 'esbuild' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts',
  specifier: 'path/posix'
}


[resolve]

Using defaultResolve for named module: { specifier: 'path/posix' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts',
  specifier: 'path/win32'
}


[resolve]

Using defaultResolve for named module: { specifier: 'path/win32' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts',
  specifier: '../utils/index.js'
}


[resolve]

Finding import URL for {
  specifier: '../utils/index.js',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.js',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/loader/index.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.js' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/src/utils/index'
}


[resolve]

Found JS import in TS: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/src/utils/index',
  resolvedTsSourceFile: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts'
}


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/esbuild/lib/main.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/esbuild/lib/main.js'
}


[getFormat]

Getting format for source file: { url: 'node:path/posix' }


[getFormat]

No loader found, using default format: { url: 'node:path/posix' }


[getFormat]

Getting format for source file: { url: 'node:path/win32' }


[getFormat]

No loader found, using default format: { url: 'node:path/win32' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts',
    format: 'module'
  }
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts',
  specifier: 'console'
}


[resolve]

Using defaultResolve for named module: { specifier: 'console' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts',
  specifier: 'fs'
}


[resolve]

Using defaultResolve for named module: { specifier: 'fs' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts',
  specifier: 'url'
}


[resolve]

Using defaultResolve for named module: { specifier: 'url' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts',
  specifier: 'path/posix'
}


[resolve]

Using defaultResolve for named module: { specifier: 'path/posix' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/src/utils/index.ts',
  specifier: 'path'
}


[resolve]

Using defaultResolve for named module: { specifier: 'path' }


[getFormat]

Getting format for source file: { url: 'node:console' }


[getFormat]

No loader found, using default format: { url: 'node:console' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

Getting format for source file: { url: 'node:fs' }


[getFormat]

No loader found, using default format: { url: 'node:fs' }


[getFormat]

Getting format for source file: { url: 'node:url' }


[getFormat]

No loader found, using default format: { url: 'node:url' }


[getFormat]

Getting format for source file: { url: 'node:path/posix' }


[getFormat]

No loader found, using default format: { url: 'node:path/posix' }


[getFormat]

Getting format for source file: { url: 'node:path' }


[getFormat]

No loader found, using default format: { url: 'node:path' }
  ✔ legacy › resolve › should resolve to TS files for JS imports in loader mode
[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-event/index.js',
  specifier: 'p-timeout'
}


[resolve]

Using defaultResolve for named module: { specifier: 'p-timeout' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts',
    format: 'module'
  }
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts',
  specifier: 'ava'
}


[resolve]

Using defaultResolve for named module: { specifier: 'ava' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts',
  specifier: 'assert'
}


[resolve]

Using defaultResolve for named module: { specifier: 'assert' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts',
  specifier: './fixtures/module'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/module',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '' }


[resolve]

Resolving incomplete URL import to file: { specifier: './fixtures/module' }


[resolve]

Resolved import URL to index file: {
  resolvedIndexFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts',
  specifier: './fixtures/math'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/math',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '' }


[resolve]

Resolving incomplete URL import to file: { specifier: './fixtures/math' }


[resolve]

Resolved import URL to file: {
  resolvedFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts',
  specifier: './fixtures/utils.mjs'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/utils.mjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.mjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils'
}


[resolve]

Found JS import in TS: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils',
  resolvedTsSourceFile: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts',
  specifier: './fixtures/data.json'
}


[resolve]

Finding import URL for {
  specifier: './fixtures/data.json',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/test/legacy/integration.test.ts'
}


[resolve]

Rewriting file extension: { parentExtension: '.ts', specifierExtension: '.json' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[getFormat]

Getting format for source file: { url: 'node:assert' }


[getFormat]

No loader found, using default format: { url: 'node:assert' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/p-timeout/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
  specifier: '../lib/worker/main.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../lib/worker/main.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Rewriting file extension: { parentExtension: '.mjs', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/module/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/math.ts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/utils.mts',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/test/legacy/fixtures/data.json',
    format: 'module'
  }
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/@ctjlewis/await-shell/dist/index.js',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/@ctjlewis/await-shell/dist/index.js'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/@ctjlewis/await-shell/dist/index.js',
  specifier: 'cross-spawn'
}


[resolve]

Using defaultResolve for named module: { specifier: 'cross-spawn' }


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/@ctjlewis/await-shell/dist/index.js',
  specifier: 'chalk'
}


[resolve]

Using defaultResolve for named module: { specifier: 'chalk' }


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cross-spawn/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/cross-spawn/index.js'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/chalk/source/index.js'
}


[transformSource]

Transforming source from context: {
  context: {
    url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
    format: 'module'
  }
}


[transformSource]

No loader found, using default transformer: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Resolving specifier: {
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs',
  specifier: '../lib/worker/main.cjs'
}


[resolve]

Finding import URL for {
  specifier: '../lib/worker/main.cjs',
  baseURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Setting import URL relative to baseURL.


[resolve]

Resolved import URL: {
  importedFileURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs',
  importedFromURL: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/entrypoints/main.mjs'
}


[resolve]

Rewriting file extension: { parentExtension: '.mjs', specifierExtension: '.cjs' }


[resolve]

Re-resolving specifier: {
  unresolvedSpecifier: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main'
}


[getFormat]

Getting format for source file: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}


[getFormat]

No loader found, using default format: {
  url: 'file:///home/christian/PersonalProjects/tsm/node_modules/ava/lib/worker/main.cjs'
}
PROCESS CWD /home/christian/PersonalProjects/tsm/test/integration/resolve

  dist/a/b/c/index.js  107b 
  dist/a/b/index.js     92b 
  dist/a/index.js       71b 
  dist/index.js         21b 

node:internal/errors:464
    ErrorCaptureStackTrace(err);
    ^

Error [ERR_UNSUPPORTED_DIR_IMPORT]: Directory import '/home/christian/PersonalProjects/tsm/test/integration/resolve/dist/' is not supported resolving ES modules imported from /home/christian/PersonalProjects/tsm/test/integration/resolve/dist/a/b/c/index.js
    at new NodeError (node:internal/errors:371:5)
    at finalizeResolution (node:internal/modules/esm/resolve:412:17)
    at moduleResolve (node:internal/modules/esm/resolve:932:10)
    at Loader.defaultResolve [as _resolve] (node:internal/modules/esm/resolve:1044:11)
    at Loader.resolve (node:internal/modules/esm/loader:89:40)
    at Loader.getModuleJob (node:internal/modules/esm/loader:242:28)
    at ModuleWrap.<anonymous> (node:internal/modules/esm/module_job:76:40)
    at link (node:internal/modules/esm/module_job:75:36) {
  code: 'ERR_UNSUPPORTED_DIR_IMPORT',
  url: 'file:///home/christian/PersonalProjects/tsm/test/integration/resolve/dist/'
}
  ✖ integration › resolve › test module should build correctly Rejected promise returned by test
  ✔ integration › resolve › test module should load correctly (224ms)
  ─

  integration › resolve › test module should build correctly

  Rejected promise returned by test. Reason:

  Error {
    message: 'Exited with code: 1',
  }

  › ChildProcess.<anonymous> (file://node_modules/@ctjlewis/await-shell/dist/index.js:8:99)

  ─

  1 test failed
error Command failed with exit code 1.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
